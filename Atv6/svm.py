# -*- coding: utf-8 -*-
"""SVM.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1athNV_Wo-vlq-0_SMa3ny6ZqEpRczLVU

Documentação sklearn SVC: https://scikit-learn.org/stable/modules/generated/sklearn.svm.SVC.html

## Análise das 3 classes do dataset *Flor de Iris* com somente duas variáveis de entrada (Comprimento e Largura de Sépala)
"""

from sklearn.datasets import load_iris
from sklearn import svm

X, y = load_iris(return_X_y = True)

entrada = X[:,:2]
saida = y[:]

import matplotlib.pyplot as plt

plt.title("Vinhos")
plt.xlabel("Comprimento da Sépala")
plt.ylabel('Largura da Sépala')
plt.scatter(entrada[:,0], entrada[:,1], c=saida)

sv = svm.SVC(kernel = 'linear', gamma='auto', C=5)
sv.fit(entrada, saida)
sv.score(entrada, saida)

"""**Equação geral da reta:**
ax + by + c = 0

by = -c - ax

y = (-c - ax) / b


**Equação reduzida da reta:**
mx + n = y
"""

print(sv.coef_[0])
w1 = sv.coef_[0][0] # a
w2 = sv.coef_[0][1] # b
w0 = sv.intercept_[0] # c

"""## Análise com Kernel polinomial"""

sv = svm.SVC(kernel = 'poly', degree=5, gamma='auto', C=3)
sv.fit(entrada, saida)
sv.score(entrada, saida)

"""### Separação do dataset em Treio e Teste"""

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)

sv = svm.SVC(kernel = 'poly', degree=5, gamma='auto', C=3)
sv.fit(X_train, y_train)
sv.score(X_test, y_test)

"""#### Relatório de Classificação"""

from sklearn.metrics import classification_report

previsao = sv.predict(X_test)
print(classification_report(y_test, previsao))